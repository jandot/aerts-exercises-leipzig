class Flight:

    def __init__(self, d, flo, fla, tlo, tla, fc, tc):
        self.distance = d
        self.from_long = flo
        self.from_lat = fla
        self.to_long = tlo
        self.to_lat = tla
        self.from_country = fc
        self.to_country = tc

        self.x = map(self.from_long, -180, 180, 0, width)
        self.y = map(self.from_lat, -180, 180, height, 0)

    def selected(self):
        if dist(mouseX, mouseY, self.x, self.y) < 10:
            return True
        else:
            return False

    def drawDepartureAirport(self):
        if self.selected():
            fill(255, 0, 0, 25)
        else:
            fill(0, 0, 255, 10)
        ellipse(self.x, self.y, 3, 3)

def setup():
    global flights
    flights = []
    size(800, 800)
    noStroke()
    noLoop()
    fill(0, 0, 255, 10)
    table = loadTable("flights.csv", "header")
    for row in table.rows():
        distance = row.getInt("distance")
        from_long = row.getFloat("from_long")
        from_lat = row.getFloat("from_lat")
        to_long = row.getFloat("to_long")
        to_lat = row.getFloat("to_lat")
        from_country = row.getString("from_country")
        to_country = row.getString("to_country")
        this_flight = Flight(distance, from_long, from_lat, to_long, to_lat, from_country, to_country)
        flights.append(this_flight)


def draw():
    global flights
    background(255, 255, 255)
    for flight in flights:
        flight.drawDepartureAirport()

def mouseMoved():
    redraw()
